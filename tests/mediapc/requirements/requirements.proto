// Copyright (C) 2024 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto2";

package android.media.performanceclass.requirements;

import "cts/tests/mediapc/requirements/mpc.proto";

option java_multiple_files = true;
option go_package = "cts/test/mediapc/requirements/requirements_go_proto";


message RequirementList {

  repeated Requirement requirements = 1;
}

// A Media Performance Class Requirement with required measurements and
// specifications including required values for each relevant MPC level.
message Requirement {
  // ID exactly as shown in the CDD
  optional string id = 1;
  // Short human readable name.
  optional string name = 2;
  optional string description = 3;
  optional Group group = 4;

  map<int64, RequirementSpec> specs = 5;
  // measurement_id to RequiredMeasurements
  // The measurement_id is a field name safe string.
  map<string, RequiredMeasurement> measurements = 6;
}

message RequirementSpec {
  optional android.media.performanceclass.MediaPerformanceClass mpc =
      1;
  // The specification of the requirement at the given MPC level exactly as
  // described in the CDD.
  optional string specification = 3;

  // measurement_id to RequiredMeasurements
  //
  // The measurement_id is a field name safe string.
  // The measurement_id must match the id of a RequiredMeasurement in the parent
  // Requirement.
  map<string, RequiredValue> required_values = 4;
}

enum Group {
  GROUP_UNSPECIFIED = 0;
  GROUP_MEDIA = 1;
  GROUP_CAMERA = 2;
  GROUP_HARDWARE = 3;
  GROUP_PERFORMANCE = 4;
}

// A required measurement needed verifiy a MPC requirement.
message RequiredMeasurement {
  // The id is a field name safe string.
  optional string id = 1;
  optional string description = 2;
}

// A required value for a RequiredMeasurement at a given MPC level.
message RequiredValue {
  // The id is a field name safe string.
  optional string id = 1;
  optional Comparison comparison = 2;
  oneof value {
    string string_value = 3;
    int64 int_value = 4;
    double double_value = 5;
  }
}

enum Comparison {
  COMPARISON_UNSPECIFIED = 0;
  COMPARISON_EQUAL = 1;
  COMPARISON_LESS_THAN = 2;
  COMPARISON_LESS_THAN_OR_EQUAL = 3;
  COMPARISON_GREATER_THAN = 4;
  COMPARISON_GREATER_THAN_OR_EQUAL = 5;
  COMPARISON_INFO_ONLY = 6;
}
