/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.android.apps.miphone.aiai.matchmaker.overview.api.generatedv2;

import static androidx.test.core.app.ApplicationProvider.getApplicationContext;

import android.content.Context;
import android.os.Bundle;
import android.security.cts.CVE_2023_35676.R;

import java.util.ArrayList;
import java.util.Iterator;

// For reference
// https://source.corp.google.com/piper///depot/google3/java/com/google/android/apps/miphone/aiai/matchmaker/overview/api/generatedv2/SuggestParcelables.java
public class SuggestParcelables {
    static Context context = getApplicationContext();

    public static final class Action {
        public String displayName;
        public String fullDisplayName;
        public String id;

        public Action() {}

        public Action(Bundle bundle) {
            if (bundle.containsKey(context.getString(R.string.id))) {
                this.id = bundle.getString(context.getString(R.string.id));
            }
            if (bundle.containsKey(context.getString(R.string.displayName))) {
                this.displayName = bundle.getString(context.getString(R.string.displayName));
            }
            if (bundle.containsKey(context.getString(R.string.fullDisplayName))) {
                this.fullDisplayName =
                        bundle.getString(context.getString(R.string.fullDisplayName));
            }
        }

        public final Bundle writeToBundle() {
            Bundle bundle = new Bundle();
            bundle.putString(context.getString(R.string.id), this.id);
            bundle.putString(context.getString(R.string.displayName), this.displayName);
            bundle.putString(context.getString(R.string.fullDisplayName), this.fullDisplayName);
            bundle.putBundle(context.getString(R.string.proxiedIntentInfo), null);
            return bundle;
        }
    }

    public static final class ActionGroup {
        public String displayName;
        public String id;
        public Action mainAction;

        public ActionGroup() {}

        public ActionGroup(Bundle bundle) {
            if (bundle.containsKey(context.getString(R.string.id))) {
                this.id = bundle.getString(context.getString(R.string.id));
            }
            if (bundle.containsKey(context.getString(R.string.displayName))) {
                this.displayName = bundle.getString(context.getString(R.string.displayName));
            }
            if (bundle.containsKey(context.getString(R.string.mainAction))) {
                Bundle bundle2 = bundle.getBundle(context.getString(R.string.mainAction));
                if (bundle2 == null) {
                    this.mainAction = null;
                } else {
                    this.mainAction = new Action(bundle2);
                }
            }
        }
    }

    public static final class Entities {
        public ArrayList entities;
        public ExtrasInfo extrasInfo;

        public Entities() {}
    }

    public static final class Entity {
        public ArrayList actions;
        public String searchQueryHint;

        public Entity() {}

        public Entity(Bundle bundle) {
            if (bundle.containsKey(context.getString(R.string.actions))) {
                ArrayList parcelableArrayList =
                        bundle.getParcelableArrayList(context.getString(R.string.actions));
                if (parcelableArrayList == null) {
                    this.actions = null;
                } else {
                    this.actions = new ArrayList(parcelableArrayList.size());
                    Iterator it = parcelableArrayList.iterator();
                    while (it.hasNext()) {
                        Bundle bundle2 = (Bundle) it.next();
                        if (bundle2 != null) {
                            this.actions.add(new ActionGroup(bundle2));
                        }
                    }
                }
            }
            if (bundle.containsKey(context.getString(R.string.searchQueryHint))) {
                this.searchQueryHint =
                        bundle.getString(context.getString(R.string.searchQueryHint));
            }
        }
    }

    public static final class ExtrasInfo {
        public boolean containsBitmaps;
        public boolean containsPendingIntents;

        public ExtrasInfo(Bundle bundle) {
            if (bundle.containsKey(context.getString(R.string.containsPendingIntents))) {
                this.containsPendingIntents =
                        bundle.getBoolean(context.getString(R.string.containsPendingIntents));
            }
            if (bundle.containsKey(context.getString(R.string.containsBitmaps))) {
                this.containsBitmaps =
                        bundle.getBoolean(context.getString(R.string.containsBitmaps));
            }
        }
    }
}
