/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.security.cts.CVE_2021_0682;

import android.accessibilityservice.AccessibilityService;
import android.accessibilityservice.AccessibilityServiceInfo;
import android.app.Notification;
import android.view.accessibility.AccessibilityEvent;

public class PocAccessibilityService extends AccessibilityService {

    @Override
    public void onInterrupt() {}

    @Override
    protected void onServiceConnected() {
        try {
            final AccessibilityServiceInfo info = new AccessibilityServiceInfo();
            info.eventTypes = AccessibilityEvent.TYPE_NOTIFICATION_STATE_CHANGED;
            info.notificationTimeout = 0 /* To receive notification instantly */;
            setServiceInfo(info);
            getSharedPreferences(getPackageName(), MODE_PRIVATE)
                    .edit()
                    .putBoolean(getString(R.string.pocServiceKey), true)
                    .commit();
        } catch (Exception exception) {
            try {
                getSharedPreferences(getPackageName(), MODE_PRIVATE)
                        .edit()
                        .putString(getString(R.string.exceptionMessage), exception.getMessage())
                        .commit();
            } catch (Exception ignore) {
                // Ignore unintended exceptions
            }
        }
    }

    @Override
    public void onAccessibilityEvent(AccessibilityEvent event) {
        try {
            final String packageName = getPackageName();
            if (event.getEventType() == AccessibilityEvent.TYPE_NOTIFICATION_STATE_CHANGED) {
                final Notification notification = (Notification) event.getParcelableData();
                final String settingsText = (String) notification.getSettingsText();
                if (settingsText.equals(getString(R.string.privateVersion))) {
                    // Without fix, settings text shows private version of notification
                    getSharedPreferences(packageName, MODE_PRIVATE)
                            .edit()
                            .putBoolean(getString(R.string.testResultKey), true)
                            .commit();
                }
                getSharedPreferences(packageName, MODE_PRIVATE)
                        .edit()
                        .putBoolean(getString(R.string.onAccessibilityKey), true)
                        .commit();
            }
        } catch (Exception exception) {
            try {
                getSharedPreferences(getPackageName(), MODE_PRIVATE)
                        .edit()
                        .putString(getString(R.string.exceptionMessage), exception.getMessage())
                        .commit();
            } catch (Exception ignore) {
                // Ignore unintended exceptions
            }
        }
    }
}
